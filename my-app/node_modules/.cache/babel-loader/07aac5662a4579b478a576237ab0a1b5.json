{"ast":null,"code":"import { NavigationContext, NavigationRouteContext } from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { useSafeAreaFrame, useSafeAreaInsets } from 'react-native-safe-area-context';\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\nexport default function Screen(props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style\n  } = props;\n  const [headerHeight, setHeaderHeight] = React.useState(() => getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight));\n  return /*#__PURE__*/React.createElement(Background, {\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    style: [styles.container, style]\n  }, /*#__PURE__*/React.createElement(View, {\n    style: styles.content\n  }, /*#__PURE__*/React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || headerShown !== false\n  }, /*#__PURE__*/React.createElement(HeaderHeightContext.Provider, {\n    value: headerShown ? headerHeight : parentHeaderHeight !== null && parentHeaderHeight !== void 0 ? parentHeaderHeight : 0\n  }, children))), headerShown ? /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigation\n  }, /*#__PURE__*/React.createElement(NavigationRouteContext.Provider, {\n    value: route\n  }, /*#__PURE__*/React.createElement(View, {\n    onLayout: e => {\n      const {\n        height\n      } = e.nativeEvent.layout;\n      setHeaderHeight(height);\n    },\n    style: headerTransparent ? styles.absolute : null\n  }, header))) : null);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"sources":["Screen.tsx"],"names":["dimensions","useSafeAreaFrame","insets","useSafeAreaInsets","isParentHeaderShown","React","parentHeaderHeight","modal","headerShown","headerStatusBarHeight","style","getDefaultHeaderHeight","focused","styles","content","navigation","route","e","height","setHeaderHeight","headerTransparent","container","flex","flexDirection","absolute","position","top","left","right"],"mappings":"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","sourcesContent":["import {\n  NavigationContext,\n  NavigationProp,\n  NavigationRouteContext,\n  ParamListBase,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\n\ntype Props = {\n  focused: boolean;\n  modal?: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  headerTransparent?: boolean;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n              style={headerTransparent ? styles.absolute : null}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}