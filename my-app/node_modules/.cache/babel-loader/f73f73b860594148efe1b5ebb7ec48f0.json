{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, Platform, StyleSheet } from 'react-native';\nexport default function HeaderBackground({\n  style,\n  ...rest\n}) {\n  const {\n    colors\n  } = useTheme();\n  return /*#__PURE__*/React.createElement(Animated.View, _extends({\n    style: [styles.container, {\n      backgroundColor: colors.card,\n      borderBottomColor: colors.border,\n      shadowColor: colors.border\n    }, style]\n  }, rest));\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        elevation: 4\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth\n        }\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth\n      }\n    })\n  }\n});","map":{"version":3,"sources":["HeaderBackground.tsx"],"names":["rest","colors","useTheme","styles","backgroundColor","borderBottomColor","shadowColor","border","container","flex","android","elevation","ios","shadowOpacity","shadowRadius","shadowOffset","width","height","StyleSheet","hairlineWidth","default","borderBottomWidth"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAA,QAAA,QAAA,0BAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,EAAA,QAAA,EAAA,UAAA,QAAA,cAAA;AAcA,eAAe,SAAA,gBAAA,CAA0B;AAAA,EAAA,KAAA;AAAS,KAAGA;AAAZ,CAA1B,EAAqD;AAClE,QAAM;AAAEC,IAAAA;AAAF,MAAaC,QAAnB,EAAA;AAEA,SAAA,aACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAE,CACLC,MAAM,CADD,SAAA,EAEL;AACEC,MAAAA,eAAe,EAAEH,MAAM,CADzB,IAAA;AAEEI,MAAAA,iBAAiB,EAAEJ,MAAM,CAF3B,MAAA;AAGEK,MAAAA,WAAW,EAAEL,MAAM,CAACM;AAHtB,KAFK,EAAA,KAAA;AADT,GAAA,EADF,IACE,CAAA,CADF;AAcD;AAED,MAAMJ,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BK,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EADK,CAAA;AAET,OAAG,QAAQ,CAAR,MAAA,CAAgB;AACjBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,SAAS,EAAE;AADJ,OADQ;AAIjBC,MAAAA,GAAG,EAAE;AACHC,QAAAA,aAAa,EADV,IAAA;AAEHC,QAAAA,YAAY,EAFT,CAAA;AAGHC,QAAAA,YAAY,EAAE;AACZC,UAAAA,KAAK,EADO,CAAA;AAEZC,UAAAA,MAAM,EAAEC,UAAU,CAACC;AAFP;AAHX,OAJY;AAYjBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,iBAAiB,EAAEH,UAAU,CAACC;AADvB;AAZQ,KAAhB;AAFM;AADoB,CAAlB,CAAf","sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\ntype Props = ViewProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  children?: React.ReactNode;\n};\n\nexport default function HeaderBackground({ style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.View\n      style={[\n        styles.container,\n        {\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        style,\n      ]}\n      {...rest}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n  },\n});\n"]},"metadata":{},"sourceType":"module"}